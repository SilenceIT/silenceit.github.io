import{_ as t,A as e,o as c,c as r,v as s,a as n,C as p,y as o,M as a}from"./chunks/framework.61464c5a.js";const v=JSON.parse('{"title":"异步任务","description":"","frontmatter":{},"headers":[],"relativePath":"view/boot/client/client-04.md","lastUpdated":null}'),y={name:"view/boot/client/client-04.md"},D=a(`<h1 id="异步任务" tabindex="-1">异步任务 <a class="header-anchor" href="#异步任务" aria-label="Permalink to &quot;异步任务&quot;">​</a></h1><h2 id="_1-1-🌼【线程池的好处】" tabindex="-1">1.1 🌼【线程池的好处】 <a class="header-anchor" href="#_1-1-🌼【线程池的好处】" aria-label="Permalink to &quot;1.1 🌼【线程池的好处】&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">使用线程池可以带来以下好处</p><ul><li>降低资源消耗。降低频繁创建、销毁线程带来的额外开销，复用已创建线程</li><li>降低使用复杂度。将任务的提交和执行进行解耦</li><li>我们只需要创建一个线程池，然后往里面提交任务就行</li><li>具体执行流程由线程池自己管理，降低使用复杂度</li><li>提高线程可管理性。能安全有效的管理线程资源，避免不加限制无限申请造成资源耗尽风险</li><li>提高响应速度。任务到达后，直接复用已创建好的线程执行</li></ul></div><div class="tip custom-block"><p class="custom-block-title">ThreadPoolExecutor 都有哪些核心参数</p><ul><li>核心线程数（corePoolSize）</li><li>最大线程数（maximumPoolSize）</li><li>空闲线程超时时间（keepAliveTime）</li><li>时间单位（unit）</li><li>阻塞队列（workQueue）</li><li>拒绝策略（handler）</li><li>线程工厂（ThreadFactory）</li></ul></div><h2 id="_1-2🌼【任务拒绝策略】" tabindex="-1">1.2🌼【任务拒绝策略】 <a class="header-anchor" href="#_1-2🌼【任务拒绝策略】" aria-label="Permalink to &quot;1.2🌼【任务拒绝策略】&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">温馨提示</p><ul><li>AbortPolicy：丢弃任务，抛运行时异常</li><li>CallerRunsPolicy：由调用者线程去执行</li><li>DiscardPolicy：直接丢弃任务本身</li><li>DiscardOldestPolicy：从队列中踢出最先进入队列（最后一个执行）的任务</li></ul></div><div class="language-txt"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">1. 判断线程池的状态，如果不是RUNNING状态，直接执行拒绝策略</span></span>
<span class="line"><span style="color:#babed8;">2. 如果 当前线程数 &lt; 核心线程池，则新建一个线程来处理提交的任务</span></span>
<span class="line"><span style="color:#babed8;">3. 如果 当前线程数 &gt; 核心线程数且任务队列没满，则将任务放入阻塞队列等待执行</span></span>
<span class="line"><span style="color:#babed8;">4. 如果 核心线程池 &lt; 当前线程池数 &lt; 最大线程数且任务队列已满，则创建新的线程执行提交的任务</span></span>
<span class="line"><span style="color:#babed8;">5. 如果 当前线程数 &gt; 最大线程数且队列已满，则执行拒绝策略拒绝该任务</span></span></code></pre></div><h2 id="_1-3🌼【线程配置文件】" tabindex="-1">1.3🌼【线程配置文件】 <a class="header-anchor" href="#_1-3🌼【线程配置文件】" aria-label="Permalink to &quot;1.3🌼【线程配置文件】&quot;">​</a></h2><div class="language-yml"><button title="Copy Code" class="copy"></button><span class="lang">yml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 线程池配置</span></span>
<span class="line"><span style="color:#F07178;">thread</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">corePoolSize</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">\${silence.thread.corePoolSize}</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;"># 核心线程池大小</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">maxPoolSize</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">\${silence.thread.maxPoolSize}</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;"># 最大可创建的线程数</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">queueCapacity</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">\${silence.thread.queueCapacity}</span><span style="color:#BABED8;">   </span><span style="color:#676E95;font-style:italic;"># 队列最大长度</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">keepAliveSeconds</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">\${silence.thread.keepAliveSeconds}</span><span style="color:#BABED8;">   </span><span style="color:#676E95;font-style:italic;"># 线程池维护线程所允许的空闲时间</span></span></code></pre></div><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">package</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">com</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">silence</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">common</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">properties</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">import</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">io</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">swagger</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">annotations</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">ApiModelProperty</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F78C6C;">import</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">lombok</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">Data</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F78C6C;">import</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">org</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">springframework</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">boot</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">context</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">properties</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">ConfigurationProperties</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F78C6C;">import</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">org</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">springframework</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">stereotype</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">Component</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * </span><span style="color:#F78C6C;font-style:italic;">@author</span><span style="color:#676E95;font-style:italic;"> SilenceLambs</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * @apiNote 读取线程池配置信息</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> */</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Data</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Component</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">ConfigurationProperties</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">prefix</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">thread</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">class</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">ThreadProperties</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">ApiModelProperty</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">核心线程池大小 </span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#C792EA;">private</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">int</span><span style="color:#BABED8;"> corePoolSize</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">ApiModelProperty</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">最大可创建的线程数</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#C792EA;">private</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">int</span><span style="color:#BABED8;"> maxPoolSize</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">ApiModelProperty</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">队列最大长度</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#C792EA;">private</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">int</span><span style="color:#BABED8;"> queueCapacity</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">ApiModelProperty</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">线程池维护线程所允许的空闲时间</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#C792EA;">private</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">int</span><span style="color:#BABED8;"> keepAliveSeconds</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div>`,10),F=s("strong",null,"线程池配置🌳",-1),i=a(`<div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">package</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">com</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">silence</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">framework</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">config</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">import</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">com</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">silence</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">common</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">utils</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">ThreadUtils</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F78C6C;">import</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">com</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">silence</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">framework</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">properties</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">ThreadProperties</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F78C6C;">import</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">org</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">apache</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">commons</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">lang3</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">concurrent</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">BasicThreadFactory</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F78C6C;">import</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">org</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">springframework</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">context</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">annotation</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">Bean</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F78C6C;">import</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">org</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">springframework</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">context</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">annotation</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">Configuration</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F78C6C;">import</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">org</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">springframework</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">scheduling</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">concurrent</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">ThreadPoolTaskExecutor</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">import</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">javax</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">annotation</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">Resource</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F78C6C;">import</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">java</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">util</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">concurrent</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">ScheduledExecutorService</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F78C6C;">import</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">java</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">util</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">concurrent</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">ScheduledThreadPoolExecutor</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F78C6C;">import</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">java</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">util</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">concurrent</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">ThreadPoolExecutor</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * </span><span style="color:#F78C6C;font-style:italic;">@author</span><span style="color:#676E95;font-style:italic;"> SilenceLambs</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * @apiNote 线程池配置信息</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> */</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Configuration</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">class</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">ThreadPoolConfig</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Resource</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#C792EA;">private</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">ThreadProperties</span><span style="color:#BABED8;"> threadProperties</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  /**</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">   * 创建并配置一个线程池执行器 Bean。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">   *</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">   * </span><span style="color:#F78C6C;font-style:italic;">@return</span><span style="color:#676E95;font-style:italic;"> ThreadPoolTaskExecutor 配置好的线程池执行器实例。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">   */</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Bean</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">threadPoolExecutor</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#C792EA;">public</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">ThreadPoolTaskExecutor</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">threadPoolExecutor</span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#C792EA;">ThreadPoolTaskExecutor</span><span style="color:#BABED8;"> threadPoolTaskExecutor </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">ThreadPoolTaskExecutor</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 设置线程池最大大小</span></span>
<span class="line"><span style="color:#BABED8;">    threadPoolTaskExecutor</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setMaxPoolSize</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;">threadProperties</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getMaxPoolSize</span><span style="color:#89DDFF;">());</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 设置线程池核心大小</span></span>
<span class="line"><span style="color:#BABED8;">    threadPoolTaskExecutor</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setCorePoolSize</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;">threadProperties</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getCorePoolSize</span><span style="color:#89DDFF;">());</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 设置队列容量</span></span>
<span class="line"><span style="color:#BABED8;">    threadPoolTaskExecutor</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setQueueCapacity</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;">threadProperties</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getQueueCapacity</span><span style="color:#89DDFF;">());</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 设置线程的空闲时间</span></span>
<span class="line"><span style="color:#BABED8;">    threadPoolTaskExecutor</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setKeepAliveSeconds</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;">threadProperties</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getKeepAliveSeconds</span><span style="color:#89DDFF;">());</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 设置拒绝策略，使用CallerRunsPolicy策略</span></span>
<span class="line"><span style="color:#BABED8;">    threadPoolTaskExecutor</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setRejectedExecutionHandler</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#BABED8;"> ThreadPoolExecutor</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">CallerRunsPolicy</span><span style="color:#89DDFF;">());</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#BABED8;"> threadPoolTaskExecutor</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  /**</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">   * 创建一个定时执行服务，用于安排任务的执行。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">   *</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">   * </span><span style="color:#F78C6C;font-style:italic;">@return</span><span style="color:#676E95;font-style:italic;"> 返回一个配置好的ScheduledExecutorService实例，用于定时或周期性执行任务。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">   */</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Bean</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">scheduledExecutorService</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#C792EA;">public</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">ScheduledExecutorService</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">scheduledExecutorService</span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 创建一个基本线程工厂，并配置线程名格式和设置为守护线程</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#C792EA;">BasicThreadFactory</span><span style="color:#BABED8;"> basicThreadFactory </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#BABED8;"> BasicThreadFactory</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Builder</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">namingPattern</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">schedule-pool-%d</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">).</span><span style="color:#82AAFF;">daemon</span><span style="color:#89DDFF;">(true).</span><span style="color:#82AAFF;">build</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 使用CallerRunsPolicy处理任务队列满时的情况，即当队列满时，由调用者线程执行任务</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#C792EA;">ThreadPoolExecutor</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">CallerRunsPolicy</span><span style="color:#BABED8;"> callerRunsPolicy </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#BABED8;"> ThreadPoolExecutor</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">CallerRunsPolicy</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 创建一个定时线程池，定制线程工厂和异常处理器</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">ScheduledThreadPoolExecutor</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;">threadProperties</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getCorePoolSize</span><span style="color:#89DDFF;">(),</span><span style="color:#BABED8;"> basicThreadFactory</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> callerRunsPolicy</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Override</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#C792EA;">protected</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">void</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">afterExecute</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">Runnable</span><span style="color:#BABED8;"> </span><span style="color:#BABED8;font-style:italic;">r</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">Throwable</span><span style="color:#BABED8;"> </span><span style="color:#BABED8;font-style:italic;">t</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">        super</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">afterExecute</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;">r</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> t</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 在任务执行后进行额外的处理，例如打印任务执行中产生的异常</span></span>
<span class="line"><span style="color:#BABED8;">        ThreadUtils</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">printException</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;">r</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> t</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div>`,1),E=s("strong",null,"线程工具类🌳",-1),A=a(`<div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">package</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">com</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">silence</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">common</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">utils</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">import</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">com</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">silence</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">common</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">exception</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">base</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">UtilException</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F78C6C;">import</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">lombok</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">extern</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">slf4j</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">Slf4j</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">import</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">java</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">util</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">concurrent</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">*</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * </span><span style="color:#F78C6C;font-style:italic;">@author</span><span style="color:#676E95;font-style:italic;"> SilenceLamb</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * @apiNote 线程工具类</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> */</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Slf4j</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">class</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">ThreadUtils</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  /**</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">   * 使当前执行线程暂停指定的毫秒数。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">   * </span><span style="color:#F78C6C;font-style:italic;">@param</span><span style="color:#676E95;font-style:italic;"> </span><span style="color:#BABED8;font-style:italic;">milliseconds</span><span style="color:#676E95;font-style:italic;"> 指定线程暂停的毫秒数。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">   * </span><span style="color:#F78C6C;font-style:italic;">@throws</span><span style="color:#676E95;font-style:italic;"> </span><span style="color:#FFCB6B;font-style:italic;">UtilException</span><span style="color:#676E95;font-style:italic;"> 如果线程在睡眠时被中断，则抛出UtilException异常。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">   */</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#C792EA;">public</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">static</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">void</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">sleep</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">long</span><span style="color:#BABED8;"> </span><span style="color:#BABED8;font-style:italic;">milliseconds</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;font-style:italic;">try</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">      Thread</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">sleep</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;">milliseconds</span><span style="color:#89DDFF;">);</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;">// 暂停当前线程指定的毫秒数</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">catch</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">InterruptedException</span><span style="color:#BABED8;"> </span><span style="color:#BABED8;font-style:italic;">e</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">      e</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">printStackTrace</span><span style="color:#89DDFF;">();</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;">// 打印线程中断异常的堆栈跟踪</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#89DDFF;font-style:italic;">throw</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">UtilException</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">线程中断</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;">// 抛出线程中断异常的自定义异常</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  /**</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">   * 关闭指定的线程池。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">   * 对于给定的ExecutorService线程池，此方法首先尝试正常关闭线程池，等待最多120秒以使其完成所有任务。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">   * 如果在指定时间内线程池未能关闭，则尝试强制关闭，并再次等待120秒以确保线程池已关闭。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">   * 如果线程池在两次尝试后仍未关闭，则记录日志并抛出UtilException异常。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">   * 如果在等待线程池关闭的过程中当前线程被中断，则同样记录日志并抛出UtilException异常。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">   *</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">   * </span><span style="color:#F78C6C;font-style:italic;">@param</span><span style="color:#676E95;font-style:italic;"> </span><span style="color:#BABED8;font-style:italic;">pool</span><span style="color:#676E95;font-style:italic;"> 要关闭的ExecutorService线程池。如果为null或已经关闭，则不执行任何操作。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">   */</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#C792EA;">public</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">static</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">void</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">shutdown</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">ExecutorService</span><span style="color:#BABED8;"> </span><span style="color:#BABED8;font-style:italic;">pool</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;">pool </span><span style="color:#89DDFF;">!=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">null</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">!</span><span style="color:#BABED8;">pool</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">isShutdown</span><span style="color:#89DDFF;">())</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">      pool</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">shutdown</span><span style="color:#89DDFF;">();</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;">// 尝试正常关闭线程池</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#89DDFF;font-style:italic;">try</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">        </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">(!</span><span style="color:#BABED8;">pool</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">awaitTermination</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">120</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> TimeUnit</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">SECONDS</span><span style="color:#89DDFF;">))</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;">// 等待线程池最多120秒来完成所有任务</span></span>
<span class="line"><span style="color:#BABED8;">          pool</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">shutdownNow</span><span style="color:#89DDFF;">();</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;">// 如果在指定时间内线程池未能关闭，则尝试强制关闭</span></span>
<span class="line"><span style="color:#BABED8;">          </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">(!</span><span style="color:#BABED8;">pool</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">awaitTermination</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">120</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> TimeUnit</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">SECONDS</span><span style="color:#89DDFF;">))</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;">// 再次等待120秒，确保线程池已关闭</span></span>
<span class="line"><span style="color:#BABED8;">            log</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">info</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">线程池未终止</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#BABED8;">            </span><span style="color:#89DDFF;font-style:italic;">throw</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">UtilException</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">线程池未终止</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#BABED8;">          </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#BABED8;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">catch</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">InterruptedException</span><span style="color:#BABED8;"> </span><span style="color:#BABED8;font-style:italic;">ie</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;">// 如果在等待过程中当前线程被中断</span></span>
<span class="line"><span style="color:#BABED8;">        pool</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">shutdownNow</span><span style="color:#89DDFF;">();</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;">// 强制关闭线程池</span></span>
<span class="line"><span style="color:#BABED8;">        Thread</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">currentThread</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">interrupt</span><span style="color:#89DDFF;">();</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;">// 重新设置中断状态</span></span>
<span class="line"><span style="color:#BABED8;">        </span><span style="color:#89DDFF;font-style:italic;">throw</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">UtilException</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">线程中断</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  /**</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">   * 打印异常信息。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">   * 该方法首先检查传入的Throwable对象t是否为null，如果为null且Runnable对象r实际上是Future类型，则尝试获取Future的结果，</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">   * 如果获取过程中发生异常，则将这些异常赋值给t。最后，如果t不为null，则将异常信息记录到日志中。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">   *</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">   * </span><span style="color:#F78C6C;font-style:italic;">@param</span><span style="color:#676E95;font-style:italic;"> </span><span style="color:#BABED8;font-style:italic;">r</span><span style="color:#676E95;font-style:italic;"> 要执行的Runnable对象或Future任务。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">   * </span><span style="color:#F78C6C;font-style:italic;">@param</span><span style="color:#676E95;font-style:italic;"> </span><span style="color:#BABED8;font-style:italic;">t</span><span style="color:#676E95;font-style:italic;"> 预期抛出的Throwable对象，如果为null且r是Future类型，则尝试从Future中获取异常信息。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">   */</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#C792EA;">public</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">static</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">void</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">printException</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">Runnable</span><span style="color:#BABED8;"> </span><span style="color:#BABED8;font-style:italic;">r</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">Throwable</span><span style="color:#BABED8;"> </span><span style="color:#BABED8;font-style:italic;">t</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 如果异常对象为空，并且传入的任务是Future类型，则尝试从Future中获取异常信息</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;">t </span><span style="color:#89DDFF;">==</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">null</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#BABED8;"> r </span><span style="color:#89DDFF;">instanceof</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">Future</span><span style="color:#89DDFF;">&lt;</span><span style="color:#89DDFF;font-style:italic;">?</span><span style="color:#89DDFF;">&gt;)</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#89DDFF;font-style:italic;">try</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">        </span><span style="color:#C792EA;">Future</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">?</span><span style="color:#89DDFF;">&gt;</span><span style="color:#BABED8;"> future </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">Future</span><span style="color:#89DDFF;">&lt;</span><span style="color:#89DDFF;font-style:italic;">?</span><span style="color:#89DDFF;">&gt;)</span><span style="color:#BABED8;"> r</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 如果Future已完成，尝试获取结果</span></span>
<span class="line"><span style="color:#BABED8;">        </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;">future</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">isDone</span><span style="color:#89DDFF;">())</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">          future</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#BABED8;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">catch</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">CancellationException</span><span style="color:#BABED8;"> </span><span style="color:#BABED8;font-style:italic;">ce</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">//捕获取消异常，设置为当前异常</span></span>
<span class="line"><span style="color:#BABED8;">        t </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> ce</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">catch</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">ExecutionException</span><span style="color:#BABED8;"> </span><span style="color:#BABED8;font-style:italic;">ee</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">//捕获执行异常，获取真正的异常原因</span></span>
<span class="line"><span style="color:#BABED8;">        t </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> ee</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getCause</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">catch</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">InterruptedException</span><span style="color:#BABED8;"> </span><span style="color:#BABED8;font-style:italic;">ie</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">//捕获中断异常，重新设置线程中断状态</span></span>
<span class="line"><span style="color:#BABED8;">        Thread</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">currentThread</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">interrupt</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 如果存在异常，则记录异常信息</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;">t </span><span style="color:#89DDFF;">!=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">null)</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">      log</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">error</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;">t</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getMessage</span><span style="color:#89DDFF;">(),</span><span style="color:#BABED8;"> t</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div>`,1),B=s("strong",null,"异步任务管理器🌳",-1),C=a(`<div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">package</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">com</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">silence</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">framework</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">async</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">manager</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">import</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">com</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">silence</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">common</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">utils</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">ThreadUtils</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F78C6C;">import</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">io</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">swagger</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">annotations</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">ApiModelProperty</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F78C6C;">import</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">org</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">slf4j</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">Logger</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F78C6C;">import</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">org</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">slf4j</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">LoggerFactory</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F78C6C;">import</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">org</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">springframework</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">stereotype</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">Service</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">import</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">javax</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">annotation</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">PreDestroy</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F78C6C;">import</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">javax</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">annotation</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">Resource</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F78C6C;">import</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">java</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">util</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">TimerTask</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F78C6C;">import</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">java</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">util</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">concurrent</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">ScheduledExecutorService</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F78C6C;">import</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">java</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">util</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">concurrent</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">TimeUnit</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * </span><span style="color:#F78C6C;font-style:italic;">@author</span><span style="color:#676E95;font-style:italic;"> SilenceLamb</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * @apiNote 异步任务管理器</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> */</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Service</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">asyncManager</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">class</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">AsyncManager</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#C792EA;">private</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">static</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">final</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">Logger</span><span style="color:#BABED8;"> log </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> LoggerFactory</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getLogger</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">ShutDown-ThreadPool</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">ApiModelProperty</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">初始化操作延迟10毫秒</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#C792EA;">private</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">static</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">final</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">int</span><span style="color:#BABED8;"> INIT_DELAY_TIME </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">10</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">ApiModelProperty</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">操作延迟10毫秒</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#C792EA;">private</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">static</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">final</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">int</span><span style="color:#BABED8;"> OPERATE_DELAY_TIME </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">ApiModelProperty</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">操作延迟10毫秒</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#C792EA;">private</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">static</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">final</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">TimeUnit</span><span style="color:#BABED8;"> TIMEUNIT </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> TimeUnit</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">SECONDS</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">ApiModelProperty</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">异步操作任务调度线程池</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Resource</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">name</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">scheduledExecutorService</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#C792EA;">private</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">ScheduledExecutorService</span><span style="color:#BABED8;"> executor</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  /**</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">   * 执行定时任务</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">   *</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">   * </span><span style="color:#F78C6C;font-style:italic;">@param</span><span style="color:#676E95;font-style:italic;"> </span><span style="color:#BABED8;font-style:italic;">task</span><span style="color:#676E95;font-style:italic;"> 要执行的定时任务对象</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">   *             该方法将指定的定时任务提交给一个执行器（executor），并在指定的延迟时间后执行该任务。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">   *             延迟时间由类级别的常量OPERATE_DELAY_TIME指定，单位为秒。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">   */</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#C792EA;">public</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">void</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">execute</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">TimerTask</span><span style="color:#BABED8;"> </span><span style="color:#BABED8;font-style:italic;">task</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 使用executor安排任务在指定延迟后执行</span></span>
<span class="line"><span style="color:#BABED8;">    executor</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">schedule</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;">task</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> OPERATE_DELAY_TIME</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> TimeUnit</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">SECONDS</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  /**</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">   * 使用固定延迟时间安排任务执行</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">   * 该方法会安排指定的任务以默认的初始延迟和操作延迟重复执行</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">   *</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">   * </span><span style="color:#F78C6C;font-style:italic;">@param</span><span style="color:#676E95;font-style:italic;"> </span><span style="color:#BABED8;font-style:italic;">task</span><span style="color:#676E95;font-style:italic;"> 要安排执行的TimerTask任务</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">   */</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#C792EA;">public</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">void</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">scheduleAtFixedRate</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">TimerTask</span><span style="color:#BABED8;"> </span><span style="color:#BABED8;font-style:italic;">task</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 使用定时器执行器以固定的延迟时间安排任务执行</span></span>
<span class="line"><span style="color:#BABED8;">    executor</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">scheduleAtFixedRate</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;">task</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> INIT_DELAY_TIME</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> OPERATE_DELAY_TIME</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> TIMEUNIT</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  /**</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">   * 停止任务线程池</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">   */</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">PreDestroy</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#C792EA;">public</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">void</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">shutdown</span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">    log</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">info</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">====关闭后台任务任务线程池====</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#BABED8;">    ThreadUtils</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">shutdown</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;">executor</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h2 id="_1-4🌼【异步任务工厂】" tabindex="-1">1.4🌼【异步任务工厂】 <a class="header-anchor" href="#_1-4🌼【异步任务工厂】" aria-label="Permalink to &quot;1.4🌼【异步任务工厂】&quot;">​</a></h2><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">package</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">com</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">silence</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">framework</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">async</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">factory</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">import</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">org</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">slf4j</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">Logger</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F78C6C;">import</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">org</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">slf4j</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">LoggerFactory</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">import</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">java</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">util</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">TimerTask</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * </span><span style="color:#F78C6C;font-style:italic;">@author</span><span style="color:#676E95;font-style:italic;"> Silence Lamb</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * @apiNote 异步工厂（产生任务用）</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> */</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">class</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">TaskFactory</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#C792EA;">private</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">static</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">final</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">Logger</span><span style="color:#BABED8;"> USER_LOGGER </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> LoggerFactory</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getLogger</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Login-TaskFactory</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  /**</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">   * 记录登录信息的TimerTask。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">   *</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">   * </span><span style="color:#F78C6C;font-style:italic;">@param</span><span style="color:#676E95;font-style:italic;"> </span><span style="color:#BABED8;font-style:italic;">username</span><span style="color:#676E95;font-style:italic;"> 用户名，登录操作的用户标识。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">   * </span><span style="color:#F78C6C;font-style:italic;">@param</span><span style="color:#676E95;font-style:italic;"> </span><span style="color:#BABED8;font-style:italic;">status</span><span style="color:#676E95;font-style:italic;"> 登录状态，表示登录操作的结果（如成功、失败等）。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">   * </span><span style="color:#F78C6C;font-style:italic;">@param</span><span style="color:#676E95;font-style:italic;"> </span><span style="color:#BABED8;font-style:italic;">message</span><span style="color:#676E95;font-style:italic;"> 操作消息，提供关于登录操作的额外信息。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">   * </span><span style="color:#F78C6C;font-style:italic;">@param</span><span style="color:#676E95;font-style:italic;"> </span><span style="color:#BABED8;font-style:italic;">args</span><span style="color:#676E95;font-style:italic;"> 可变参数，用于扩展消息格式化时需要的参数。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">   * </span><span style="color:#F78C6C;font-style:italic;">@return</span><span style="color:#676E95;font-style:italic;"> 返回一个TimerTask实例，该实例在执行时会记录登录信息。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">   */</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#C792EA;">public</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">static</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">TimerTask</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">recordLoginInfo</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">final</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">String</span><span style="color:#BABED8;"> </span><span style="color:#BABED8;font-style:italic;">username</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">final</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">String</span><span style="color:#BABED8;"> </span><span style="color:#BABED8;font-style:italic;">status</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">final</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">String</span><span style="color:#BABED8;"> </span><span style="color:#BABED8;font-style:italic;">message</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">final</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">Object</span><span style="color:#89DDFF;">...</span><span style="color:#BABED8;"> </span><span style="color:#BABED8;font-style:italic;">args</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">TimerTask</span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Override</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#C792EA;">public</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">void</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">run</span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 使用日志记录用户登录信息</span></span>
<span class="line"><span style="color:#BABED8;">        USER_LOGGER</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">info</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">用户: {}</span><span style="color:#BABED8;">\\t</span><span style="color:#C3E88D;">,登录状态: {}</span><span style="color:#BABED8;">\\t</span><span style="color:#C3E88D;">,操作消息: {}</span><span style="color:#BABED8;">\\t</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> username</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> status</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> message</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">package</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">com</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">silence</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">app</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">controller</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">test</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">import</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">com</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">silence</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">framework</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">async</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">factory</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">TaskFactory</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F78C6C;">import</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">com</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">silence</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">framework</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">async</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">manager</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">AsyncManager</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F78C6C;">import</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">org</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">springframework</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">web</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">bind</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">annotation</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">RequestMapping</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F78C6C;">import</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">org</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">springframework</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">web</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">bind</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">annotation</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">RestController</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">import</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">javax</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">annotation</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">Resource</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * </span><span style="color:#F78C6C;font-style:italic;">@author</span><span style="color:#676E95;font-style:italic;"> SilenceLambs</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * @apiNote 测试控制器</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> */</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">RestController</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">RequestMapping</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">test</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">class</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">TestController</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Resource</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#C792EA;">private</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">AsyncManager</span><span style="color:#BABED8;"> resourceManager</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">RequestMapping</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/login</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#C792EA;">public</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">String</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">test</span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">    resourceManager</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">execute</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;">TaskFactory</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">recordLoginInfo</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">admin</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">1</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">登陆成功</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">));</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">test</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div>`,4);function u(f,d,m,h,g,T){const l=e("Badge");return c(),r("div",null,[D,s("ul",null,[s("li",null,[F,n(),p(l,{type:"tip"},{default:o(()=>[n("ThreadPoolConfig.java")]),_:1})])]),i,s("ul",null,[s("li",null,[E,n(),p(l,{type:"tip"},{default:o(()=>[n("ThreadUtils.java")]),_:1})])]),A,s("ul",null,[s("li",null,[B,n(),p(l,{type:"tip"},{default:o(()=>[n("AsyncManager.java")]),_:1})])]),C])}const P=t(y,[["render",u]]);export{v as __pageData,P as default};
